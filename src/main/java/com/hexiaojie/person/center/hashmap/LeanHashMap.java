package com.hexiaojie.person.center.hashmap;

/**
 * hashmap相关面试问题
 */
public class LeanHashMap {
    /**
     * hashmap底层数据结构
     * 为什么数组默认长度是16？那是为了实现均匀分布。因为在使用2的幂的数字的时候，Length-1的值是所有二进制位全为1，这种情况下，
     * index的结果等同于HashCode后几位的值。只要输入的HashCode本身分布均匀，Hash算法的结果就是均匀的。
     *
     * jdk1.8以前 数组+链表  头插法（头插法在并发下有致命问题，就是可能形成数据环，get 数据时死循环
     * 而在 1.8 之前因为处理 hash 冲突的方式是用链表存放数据，使用头插法可以提升一定效率。）
     *
     * jdk1.8以后 数组+链表（在一定条件（链表长度大于8，数组长度大于64）下会转化为红黑树）  尾插法
     * 但是在 1.8 之后这个效率提升就可有可无了，链表长度超过 7 就要考虑升级红黑树了，所以哪怕进行尾插遍历次数也会很有限，效率影响不大。
     *
     * 扩容原理：
     *HashMap的扩展原理是HashMap用一个新的数组替换原来的数组。重新计算原数组的所有数据并插入一个新数组，然后指向新数组。如果阵列在容量扩展前已达到最大值，阈值将直接设置为最大整数返回。
     *
     * 扩容过程：
     *
     *
     *
     */
}
